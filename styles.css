/* 1. Use a more-intuitive box-sizing model */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* 2. Remove default margin */
* {
  margin: 0;
}

/* 3. Enable keyword animations */
@media (prefers-reduced-motion: no-preference) {
  html {
    interpolate-size: allow-keywords;
  }
}

body {
  /* 4. Add accessible line-height */
  line-height: 1.5;
  /* 5. Improve text rendering */
  -webkit-font-smoothing: antialiased;
}

/* 6. Improve media defaults */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/* 7. Inherit fonts for form controls */
input,
button,
textarea,
select {
  font: inherit;
}

/* 8. Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* 9. Improve line wrapping */
p {
  text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

/*
  10. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

/* Variables */
:root {
  font-family: roboto;
  --accent: #18ea1a;
  --dark: #100f02;
  --light: #fdf9e6;
  --primary: #f3ec82;
  --secondary: #3b980e;
  --sub-dark: #17170a;
}

/* Box Model & Background */
html {
  background-color: rgba(39, 37, 37, 0.993);
  height: 100%;
}

body {
  min-height: 100%;
}

/* Layout Containers */
.outmost-container {
  background-color: var(--dark);
  display: grid;
  grid-template-rows: 80px 1fr;
  height: 100vh;
}

.header {
  align-items: center;
  background-color: var(--sub-dark);
  color: var(--light);
  display: flex;
  justify-content: flex-start;
  padding: 20px;
}

.cards-container {
  background-color: var(--dark);
  display: grid;
  gap: 20px;
  grid-auto-rows: 500px;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  margin: 20px;
  max-height: calc(100vh - 40px);
  overflow-y: auto;
  scrollbar-width: thin;
  scrollbar-color: var(--primary) var(--dark);
}

/* Forms */
.header label {
  text-align: center;
}

.header form.add-book {
  display: flex;
  flex-direction: column;
  gap: 14px;
}

.header .form-section {
  display: flex;
  flex: 1;
  flex-direction: column;
  gap: 10px;
}

.header input[type="text"]:not(.url),
.header input.url {
  background-color: var(--dark);
  border-radius: 8px;
  color: var(--light);
  flex: 1;
  font-size: 0.95rem;
  padding: 1px 5px;
}

.header input.url {
  border: 1px solid var(--primary);
}

.checkbox {
  display: flex;
  flex: 1;
  gap: 10px;
  justify-content: center;
}

.header input[type="checkbox"] {
  accent-color: var(--accent);
}

.header input[type="checkbox"]:hover {
  cursor: pointer;
}

/* Validation */
.header input[type="text"]:not(.url):valid {
  border-color: #15fd15;
}

.header input[type="text"]:not(.url):invalid {
  border-color: red;
}

/* Focus */
.header input[type="text"]:not(.url):focus,
.header input.url:focus {
  outline: none;
}

/* Interactions */
.header button {
  align-self: center;
  background-color: var(--primary);
  border: none;
  border-radius: 20px;
  font-weight: bolder;
  height: 40px;
  width: 200px;
}

button:hover {
  cursor: pointer;
}

.header button.submit-book:hover {
  background-color: var(--accent);
}

.cancelDialog:hover {
  background-color: red;
}

.showDialog:hover {
  filter: brightness(0.9);
}

/* Card Styling */
.card {
  background-color: var(--sub-dark);
  border-radius: 20px;
  box-shadow: inset 0 -240px 40px -20px rgba(20, 20, 10, 0.801);
  color: var(--light);
  display: flex;
  flex-direction: column;
  gap: 8px;
  justify-content: flex-end;
  max-width: 500px;
  padding: 20px 0;
  text-align: center;
}

/* Pseudo-elements */
.authorName::before {
  content: "By: ";
}

.releaseYear::before {
  content: "Year of release: ";
}

.pageNumber::after {
  content: " pages";
}

/* SVG Controls */
.card .svgButtonsContainer {
  align-self: center;
  display: flex;
  flex: 1;
  gap: 20px;
  justify-content: center;
  max-height: 24px;
  width: 100%;
}

.card svg {
  fill: var(--light);
  height: 24px;
  width: 24px;
}

/* Dialog Styling */
dialog {
  align-self: center;
  background-color: var(--sub-dark);
  border: 3px solid var(--primary);
  border-radius: 12px;
  color: var(--light);
  justify-self: center;
  position: absolute;
  scrollbar-color: var(--dark) var(--sub-dark);
  scrollbar-width: thin;
  width: max-content;
}

dialog::backdrop {
  backdrop-filter: blur(3px);
}

/* Utility Classes */
.form-buttons {
  display: flex;
  gap: 3vw;
  justify-content: center;
}

.double {
  display: flex;
  gap: 12px;
}

.bookName {
  overflow-x: auto;
}

.authorName {
  overflow-x: auto;
}

/* State Indicators */
.greenBorder {
  border: solid #15fd15 2px;
  .readState {
    color: #15fd15;
  }
  .svgButtonsContainer svg:hover {
    fill: #15fd15;
    cursor: pointer;
  }
}

.redBorder {
  border: solid red 2px;
  .readState {
    color: red;
  }
  .svgButtonsContainer svg:hover {
    fill: red;
    cursor: pointer;
  }
}

/* Misc Utilities */
.asterisk {
  color: red;
  font-size: 1.5rem;
  font-weight: bolder;
}

.hide {
  display: none;
}

.show:hover + br + .hide {
  color: var(--light);
  display: block;
}
.red {
  color: red;
  font-weight: bolder;
}

/* Responsive Design */
@media only screen and (max-width: 468px) {
  .double {
    flex-direction: column;
  }
  .header {
    justify-content: center;
  }
}
